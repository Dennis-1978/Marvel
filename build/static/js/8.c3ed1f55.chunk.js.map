{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/errorBoundary/ErrorBoundary.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharacterByName","_ref3","_callee3","name","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","AppBanner","_jsxs","className","children","avengers","avengersLogo","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","error","_createClass","key","value","errorInfo","console","log","this","setState","props","Component","setContent","newItemLoading","Spinner","ComicsList","comicsList","setComicsList","_useState3","_useState4","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","_toConsumableArray","renderItem","arr","item","index","Link","to","disabled","onClick","ComicsPage","_Fragment","Helmet","content"],"mappings":"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","file":"static/js/8.c3ed1f55.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img \n            style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} \n            src={img} \n            alt=\"error\" />\n    );\n}\n\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const {request, clearError, process, setProcess} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=92c035ac96fe4c4c6844f3bcc2ebf35c';\n    const _baseOffset = 210;\n\n    // returns an object with data about all characters from the server\n    const getAllCharacters = async (offset = _baseOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n    // returns an object with data about a specific character from the server\n    const getCharacter = async (id) => {\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n\t\treturn _transformCharacter(res.data.results[0]);\n\t};\n\n\tconst getCharacterByName = async (name) => {\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n    const getAllComics = async (offset = 0) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformComics);\n\t};\n\n    const getComic = async (id) => {\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\t\treturn _transformComics(res.data.results[0]);\n\t};\n\n    // returns the object with the converted data\n    const _transformCharacter = (char) => {\n\t\treturn {\n\t\t\tid: char.id,\n\t\t\tname: char.name,\n\t\t\tdescription: char.description\n\t\t\t\t? `${char.description.slice(0, 210)}...`\n\t\t\t\t: \"There is no description for this character\",\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n\t\t\thomepage: char.urls[0].url,\n\t\t\twiki: char.urls[1].url,\n\t\t\tcomics: char.comics.items,\n\t\t};\n\t};\n\n    const _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} p.`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\n\t\t\t// optional chaining operator\n\t\t\tprice: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"not available\",\n\t\t};\n\t};\n\n    return {\n\t\tprocess,\n\t\tsetProcess,\n\t\tclearError,\n\t\tgetAllCharacters,\n\t\tgetCharacter,\n\t\tgetCharacterByName,\n\t\tgetAllComics,\n\t\tgetComic,\n\t};\n}\n\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, \n                                       method = 'GET', \n                                       body = null, \n                                       headers = {'Content-Type': 'application/json'}\n                                       ) => {\n        setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            setProcess('error');\n            throw e;\n        }\n    }, []);\n\n    const clearError = useCallback(() => {\n        setProcess('loading');\n    }, []);\n\n    return {\n        request, \n        clearError,\n        process,\n        setProcess\n    };\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { Component } from 'react';\n\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    };\n\n    componentDidCatch(error, errorInfo) {\n        console.log(':', error, 'errorInfo:', errorInfo);\n        this.setState({\n            error: true\n        });\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage />\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner />;\n        case 'loading': \n            return newItemLoading ? <Component /> : <Spinner />;\n        case 'confirmed':\n            return <Component />;\n        case 'error':\n            return <ErrorMessage />;\n        default:\n            throw new Error('Unexpected process state');\n    }\n}; \n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const { process, setProcess, getAllComics } = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'));\n    };\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList([...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    };\n\n    function renderItem(arr) {\n        const items = arr.map((item, index) => {\n            return (\n                <li \n                    className=\"comics__item\"\n                    key={index}>\n                    <Link to={`${item.id}`}>\n                        <img \n                            src={item.thumbnail}\n                            alt={item.title}\n                            className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            );\n        });\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        );\n        \n    };\n\n    const items = renderItem(comicsList);\n\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderItem(comicsList), newItemLoading)}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from 'react-helmet';\n\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\nimport ComicsList from '../comicsList/ComicsList';\nimport AppBanner from '../appBanner/AppBanner';\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"Page with list of our comics\"\n                    />\n                <title>Comics page</title>\n            </Helmet>\n            <AppBanner />\n            <ErrorBoundary>\n                <ComicsList />\n            </ErrorBoundary>\n        </>\n    );\n};\n\nexport default ComicsPage;"],"sourceRoot":""}