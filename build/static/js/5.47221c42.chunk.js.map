{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js","components/errorBoundary/ErrorBoundary.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/CharInfo.js","components/charSearchForm/CharSearchForm.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharacterByName","_ref3","_callee3","name","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","Skeleton","_jsxs","_Fragment","children","className","setContent","Component","Spinner","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","error","_createClass","key","value","errorInfo","console","log","this","setState","props","View","imgStyle","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","onCharLoaded","Math","floor","random","then","onClick","mjolnir","CharList","charList","setCharList","_useState3","_useState4","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","elements","useMemo","arr","index","tabIndex","ref","el","onCharSelected","onKeyDown","e","renderItems","disabled","includes","content","i","color","borderRadius","textAlign","getEmptyComicsList","CharInfo","charId","CharSearchForm","errorMessage","Link","to","Formik","initialValues","charName","validationSchema","Yup","required","onSubmit","Form","htmlFor","Field","type","placeholder","FormikErrorMessage","component","MainPage","selectedChar","Helmet","decoration"],"mappings":"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","file":"static/js/5.47221c42.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img \n            style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} \n            src={img} \n            alt=\"error\" />\n    );\n}\n\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const {request, clearError, process, setProcess} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=92c035ac96fe4c4c6844f3bcc2ebf35c';\n    const _baseOffset = 210;\n\n    // returns an object with data about all characters from the server\n    const getAllCharacters = async (offset = _baseOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n    // returns an object with data about a specific character from the server\n    const getCharacter = async (id) => {\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n\t\treturn _transformCharacter(res.data.results[0]);\n\t};\n\n\tconst getCharacterByName = async (name) => {\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n    const getAllComics = async (offset = 0) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformComics);\n\t};\n\n    const getComic = async (id) => {\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\t\treturn _transformComics(res.data.results[0]);\n\t};\n\n    // returns the object with the converted data\n    const _transformCharacter = (char) => {\n\t\treturn {\n\t\t\tid: char.id,\n\t\t\tname: char.name,\n\t\t\tdescription: char.description\n\t\t\t\t? `${char.description.slice(0, 210)}...`\n\t\t\t\t: \"There is no description for this character\",\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n\t\t\thomepage: char.urls[0].url,\n\t\t\twiki: char.urls[1].url,\n\t\t\tcomics: char.comics.items,\n\t\t};\n\t};\n\n    const _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} p.`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\n\t\t\t// optional chaining operator\n\t\t\tprice: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"not available\",\n\t\t};\n\t};\n\n    return {\n\t\tprocess,\n\t\tsetProcess,\n\t\tclearError,\n\t\tgetAllCharacters,\n\t\tgetCharacter,\n\t\tgetCharacterByName,\n\t\tgetAllComics,\n\t\tgetComic,\n\t};\n}\n\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, \n                                       method = 'GET', \n                                       body = null, \n                                       headers = {'Content-Type': 'application/json'}\n                                       ) => {\n        setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            setProcess('error');\n            throw e;\n        }\n    }, []);\n\n    const clearError = useCallback(() => {\n        setProcess('loading');\n    }, []);\n\n    return {\n        request, \n        clearError,\n        process,\n        setProcess\n    };\n}","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Skeleton from '../components/skeleton/Skeleton';\nimport Spinner from '../components/spinner/Spinner';\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\n\nconst setContent = (process, Component, data) => {\n    switch (process) {\n        case 'waiting':\n            return <Skeleton />;\n        case 'loading': \n            return <Spinner />;\n        case 'confirmed':\n            return <Component data={data} />;\n        case 'error':\n            return <ErrorMessage />;\n        default:\n            throw new Error('Unexpected process state');\n    }\n};\n\nexport default setContent;","import { Component } from 'react';\n\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    };\n\n    componentDidCatch(error, errorInfo) {\n        console.log(':', error, 'errorInfo:', errorInfo);\n        this.setState({\n            error: true\n        });\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage />\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport setContent from '../../utils/setContent';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\tconst [char, setChar] = useState({});\n\n\tconst { getCharacter, clearError, process, setProcess } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t}, []);\n\n\t// updates the local state with character data\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t};\n\t\n\t// updates a received, random character\n\tconst updateChar = () => {\n\t\tclearError();\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n\n\t\tgetCharacter(id)\n\t\t\t.then(onCharLoaded)\n\t\t\t.then(() => setProcess('confirmed'));\n\t};\n\n\treturn (\n\t\t<div className=\"randomchar\">\n\t\t\t{setContent(process, View, char)}\n\t\t\t<div className=\"randomchar__static\">\n\t\t\t\t<p className=\"randomchar__title\">\n\t\t\t\t\tRandom character for today!<br/>\n\t\t\t\t\tDo you want to get to know him better?\n\t\t\t\t</p>\n\t\t\t\t<p className=\"randomchar__title\">\n\t\t\t\t\tOr choose another one\n\t\t\t\t</p>\n\t\t\t\t<button \n\t\t\t\t\tclassName=\"button button__main\"\n\t\t\t\t\tonClick={() => updateChar()}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"inner\">try it</div>\n\t\t\t\t</button>\n\t\t\t\t<img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst View = ({data}) => {\n\tconst {name, description, thumbnail, homepage, wiki} = data;\n\n\tlet imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n\treturn (\n\t\t<div className=\"randomchar__block\">\n\t\t\t<img style={imgStyle} src={thumbnail} alt={name} className=\"randomchar__img\"/>\n\t\t\t<div className=\"randomchar__info\">\n\t\t\t\t<p className=\"randomchar__name\">{name}</p>\n\t\t\t\t<p className=\"randomchar__descr\">\n\t\t\t\t\t{description}\n\t\t\t\t</p>\n\t\t\t\t<div className=\"randomchar__btns\">\n\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default RandomChar;","import { useState, useEffect, useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner/>;\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>;\n        case 'confirmed':\n            return <Component/>;\n        case 'error':\n            return <ErrorMessage/>;\n        default:\n            throw new Error('Unexpected process state');\n    }\n}\n\nconst CharList = (props) => {\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n    const {getAllCharacters, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n            .then(() => setProcess('confirmed'));\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItems(arr) {\n        const items =  arr.map((item, index) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[index] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(index);\n                    }}\n                    onKeyDown={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(index);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            );\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        );\n    }\n    \n    const elements = useMemo(() => {\n        return setContent(process, () => renderItems(charList), newItemLoading);\n    }, [process]);\n\n    return (\n        <div className=\"char__list\">\n            {elements}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport setContent from '../../utils/setContent';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\tconst [char, setChar] = useState(null);\n\n\tconst { getCharacter, clearError, process, setProcess } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t}, [props.charId]);\n\n\tconst updateChar = () => {\n\t\tconst {charId} = props;\n\n\t\tif (!charId) {\n\t\t\treturn;\n\t\t}\n\n\t\tclearError();\n\t\tgetCharacter(charId)\n\t\t\t.then(onCharLoaded)\n\t\t\t.then(() => setProcess('confirmed'));\n\t};\n\n\t// updates the local state with character data\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t};\n\n\treturn (\n\t\t<div className=\"char__info\">\n\t\t\t{setContent(process, View, char)}\n\t\t</div>\n\t);\n}\n\nconst View = ({data}) => {\n\tconst {name, thumbnail, description, homepage, wiki, comics} = data;\n\n\tconst imgStyle = thumbnail.includes('image_not_available') \n\t\t? {objectFit: 'contain'} \n\t\t: {objectFit: 'cover'};\n\n\tconst content = comics.map((item, i) => {\n\t\tif (i > 9) {\n\t\t\treturn;\n\t\t}\n\t\treturn (\n\t\t\t<li key={i} className=\"char__comics-item\">\n\t\t\t\t{item.name}\n\t\t\t</li>\n\t\t);\n\t});\n\t\n\tconst getEmptyComicsList = () => {\n\t\tif (!comics.length) {\n\t\t\treturn (\n\t\t\t\t<li style={\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcolor: '#9F0013', \n\t\t\t\t\t\t\tborderRadius: '4px',\n\t\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\t}\n\t\t\t\t\t} \n\t\t\t\t\tclassName=\"char__comics-item\">\n\t\t\t\t\tThis character has no more comic books.\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"char__basics\">\n\t\t\t\t<img src={thumbnail} alt={name} style={imgStyle} />\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"char__info-name\">{name}</div>\n\t\t\t\t\t<div className=\"char__btns\">\n\t\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"char__descr\">\n\t\t\t\t{description}\n\t\t\t</div>\n\t\t\t<div className=\"char__comics\">Comics:</div>\n\t\t\t<ul className=\"char__comics-list\">\n\t\t\t\t{content}\n\t\t\t\t{getEmptyComicsList()}\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n\nCharInfo.propTypes = {\n\tcharId: PropTypes.number\n};\n\nexport default CharInfo;","import { useState } from 'react';\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charSearchForm.scss';\n\nconst CharSearchForm = () => {\n    const [char, setChar] = useState(null);\n    const {getCharacterByName, clearError, process, setProcess} = useMarvelService();\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    };\n\n    const updateChar = (name) => {\n        clearError();\n\n        getCharacterByName(name)\n            .then(onCharLoaded)\n            .then(() => setProcess('confirmed'));\n    };\n\n    const errorMessage = process === 'error' ? <div className=\"char__search-critical-error\"><ErrorMessage /></div> : null;\n    const results = !char ? null : char.length > 0 ?\n        <div className=\"char__search-wrapper\">\n            <div className=\"char__search-success\">There is! Visit {char[0].name} page?</div>\n            <Link to={`/characters/${char[0].id}`} className=\"button button__secondary\">\n                <div className=\"inner\">To page</div>\n            </Link>\n        </div> :\n        <div className=\"char__search-error\">\n            The character was not found. Check the name and try again\n        </div>\n\n    return (\n        <div className=\"char__search-form\">\n            <Formik\n                initialValues = {{\n                    charName: ''\n                }}\n                validationSchema = {Yup.object({\n                    charName: Yup.string().required('This filed is required')\n                })}\n                onSubmit = {({charName}) => {\n                    updateChar(charName);\n                }}\n            >\n                <Form>\n                    <label className=\"char__search-label\" htmlFor=\"charName\">Or find a character by name:</label>\n                    <div className=\"char__search-wrapper\">\n                        <Field\n                            id=\"charName\"\n                            name=\"charName\"\n                            type=\"text\"\n                            placeholder=\"Enter name\" />\n                        <button\n                            type=\"submit\"\n                            className=\"button button__main\"\n                            disabled={process === 'loading'}>\n                            <div className=\"inner\">find</div>\n                        </button>\n                    </div>\n                    <FormikErrorMessage component=\"div\" className=\"char__search-error\" name=\"charName\" />\n                </Form>\n            </Formik>\n            {errorMessage}\n            {results}\n        </div>\n    );\n};\n\nexport default CharSearchForm;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport RandomChar from '../randomChar/RandomChar';\nimport CharList from '../charList/CharList';\nimport CharInfo from '../charInfo/CharInfo';\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\nimport CharSearchForm from '../charSearchForm/CharSearchForm';\n\nimport decoration from '../../resources/img/vision.png';\n\nconst MainPage = () => {\n\n    const [selectedChar, setChar] = useState(null);\n    \n\tconst onCharSelected = (id) => {\n        setChar(id);\n\t};\n\n    return (\n        <>\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"Marvel information portal\"\n                    />\n                <title>Marvel information portal</title>\n            </Helmet>\n            <ErrorBoundary>\n                <RandomChar />\n            </ErrorBoundary>\n            <div className=\"char__content\">\n                <ErrorBoundary>\n                    <CharList onCharSelected={onCharSelected} />\n                </ErrorBoundary>\n                <div>\n                    <ErrorBoundary>\n                        <CharInfo charId={selectedChar} />\n                    </ErrorBoundary>\n                    <ErrorBoundary>\n                        <CharSearchForm />\n                    </ErrorBoundary>\n                </div>\n            </div>\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n        </>\n    );\n};\n\nexport default MainPage;\n"],"sourceRoot":""}