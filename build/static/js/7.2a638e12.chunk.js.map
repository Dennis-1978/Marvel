{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/SingleComicPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharacterByName","_ref3","_callee3","name","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","Skeleton","_jsxs","_Fragment","children","className","setContent","Component","Spinner","AppBanner","avengers","avengersLogo","View","Helmet","content","Link","to","SingleComicPage","comicId","useParams","comic","setComic","_useMarvelService","useEffect","updateComic","then","onComicLoaded"],"mappings":"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","file":"static/js/7.2a638e12.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img \n            style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} \n            src={img} \n            alt=\"error\" />\n    );\n}\n\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const {request, clearError, process, setProcess} = useHttp();\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=92c035ac96fe4c4c6844f3bcc2ebf35c';\n    const _baseOffset = 210;\n\n    // returns an object with data about all characters from the server\n    const getAllCharacters = async (offset = _baseOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n    // returns an object with data about a specific character from the server\n    const getCharacter = async (id) => {\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n\t\treturn _transformCharacter(res.data.results[0]);\n\t};\n\n\tconst getCharacterByName = async (name) => {\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n    const getAllComics = async (offset = 0) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformComics);\n\t};\n\n    const getComic = async (id) => {\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\t\treturn _transformComics(res.data.results[0]);\n\t};\n\n    // returns the object with the converted data\n    const _transformCharacter = (char) => {\n\t\treturn {\n\t\t\tid: char.id,\n\t\t\tname: char.name,\n\t\t\tdescription: char.description\n\t\t\t\t? `${char.description.slice(0, 210)}...`\n\t\t\t\t: \"There is no description for this character\",\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\n\t\t\thomepage: char.urls[0].url,\n\t\t\twiki: char.urls[1].url,\n\t\t\tcomics: char.comics.items,\n\t\t};\n\t};\n\n    const _transformComics = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\ttitle: comics.title,\n\t\t\tdescription: comics.description || \"There is no description\",\n\t\t\tpageCount: comics.pageCount\n\t\t\t\t? `${comics.pageCount} p.`\n\t\t\t\t: \"No information about the number of pages\",\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\n\t\t\t// optional chaining operator\n\t\t\tprice: comics.prices[0].price\n\t\t\t\t? `${comics.prices[0].price}$`\n\t\t\t\t: \"not available\",\n\t\t};\n\t};\n\n    return {\n\t\tprocess,\n\t\tsetProcess,\n\t\tclearError,\n\t\tgetAllCharacters,\n\t\tgetCharacter,\n\t\tgetCharacterByName,\n\t\tgetAllComics,\n\t\tgetComic,\n\t};\n}\n\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, \n                                       method = 'GET', \n                                       body = null, \n                                       headers = {'Content-Type': 'application/json'}\n                                       ) => {\n        setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            setProcess('error');\n            throw e;\n        }\n    }, []);\n\n    const clearError = useCallback(() => {\n        setProcess('loading');\n    }, []);\n\n    return {\n        request, \n        clearError,\n        process,\n        setProcess\n    };\n}","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Skeleton from '../components/skeleton/Skeleton';\nimport Spinner from '../components/spinner/Spinner';\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\n\nconst setContent = (process, Component, data) => {\n    switch (process) {\n        case 'waiting':\n            return <Skeleton />;\n        case 'loading': \n            return <Spinner />;\n        case 'confirmed':\n            return <Component data={data} />;\n        case 'error':\n            return <ErrorMessage />;\n        default:\n            throw new Error('Unexpected process state');\n    }\n};\n\nexport default setContent;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nimport useMarvelService from '../../services/MarvelService';\nimport setContent from '../../utils/setContent';\nimport AppBanner from '../appBanner/AppBanner'; \n\nimport './singleComicPage.scss';\n\nconst SingleComicPage = () => {\n\n    const {comicId} = useParams();\n    const [comic, setComic] = useState(null);\n\n    const { getComic, clearError, process, setProcess } = useMarvelService();\n\n    useEffect(() => {\n\t\tupdateComic();\n\t}, [comicId]);\n\n\tconst updateComic = () => {\n\t\tclearError();\n\t\tgetComic(comicId)\n\t\t\t.then(onComicLoaded)\n            .then(() => setProcess('confirmed'));\n\t};\n\n\t// updates the local state with comic data\n\tconst onComicLoaded = (comic) => {\n\t\tsetComic(comic);\n\t};\n\n    return (\n        <>\n            {setContent(process, View, comic)}\n        </>\n    )\n}\n\nconst View = ({data}) => {\n    const {thumbnail, title, description, pageCount, language, price} = data;\n    \n    return (\n        <>\n            <AppBanner />\n            <div className=\"single-comic\">\n                <Helmet>\n                    <meta\n                        name=\"description\"\n                        content={`${title} comics book`}\n                        />\n                    <title>{title}</title>\n                </Helmet>\n                <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n                <div className=\"single-comic__info\">\n                    <h2 className=\"single-comic__name\">{title}</h2>\n                    <p className=\"single-comic__descr\">{description}</p>\n                    <p className=\"single-comic__descr\">{pageCount}</p>\n                    <p className=\"single-comic__descr\">Language: {language}</p>\n                    <div className=\"single-comic__price\">{price}</div>\n                </div>\n                <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\n            </div>\n        </>\n    );\n};\n\nexport default SingleComicPage;"],"sourceRoot":""}